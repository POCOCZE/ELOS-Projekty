---
## Unseal HashiCorp Vault
# DO NOT USE THIS PLAYBOOK IN PRODUCTION!
# Extracted files (unseal keys, root token) are in plaintext, NOT ENCRYPTED!
# Created by simon
# Date: 14/11/2024

- name: Initialize, Unseal, Join HashiCorp Vault Pods in High Availability Deployment Type with TLS
  hosts: vault-cluster
  gather_facts: no
  vars_files:
    - ../variables/env.yml

  pre_tasks:
    - name: install pre-requisites
      pip:
        name:
          - openshift
          - pyyaml
          - kubernetes

    - name: Install python3-kubernetes if not installed
      become: yes
      apt:
        name: python3-kubernetes
        state: present
      ignore_errors: yes

    # - name: Check if HashiCorp Vault is installed with Helm
    #   command: helm list -n {{ namespace }} -q
    #   register: helm_list
    #   failed_when: "'vault' not in helm_list.stdout"

    # - name: Get the number of replicas using helm
    #   shell: helm get values vault -o json | jq '.server.ha.replicas'
    #   register: helm_output

    # - name: Extract the number of replicas
    #   set_fact:
    #     replica_count: "{{ helm_output.stdout }}"

    - name: Check if HashiCorp Vault is installed with Helm
      command: helm list -n {{ namespace }} -q
      register: helm_list
      ignore_errors: yes

    - name: Get the number of replicas using helm
      shell: helm get values vault -o json | jq '.server.ha.replicas'
      register: helm_output
      ignore_errors: yes

    - name: Validate and set helm output
      set_fact:
        helm_output:
          stdout: "{{ helm_raw_output.stdout }}"
      when: 
        - helm_raw_output is success
        - helm_raw_output.stdout | int | string == helm_raw_output.stdout | trim
      ignore_errors: yes

    - name: Set replica count from Helm output
      set_fact:
        replica_count: "{{ helm_output.stdout }}"
      when: helm_output is success

    - name: Set replica count from variables
      set_fact:
        replica_count: "{{ replicas }}"
      when: helm_output is failed

  tasks:
    - name: Initialize the first Vault `vault-0` pod
      kubernetes.core.k8s_exec:
        namespace: "{{ namespace }}"
        pod: "{{ vault_pod_0 }}"
        command: vault operator init
      register: init_output

    - name: Save Unseal Keys and Root Token
      copy:
        content: "{{ init_output.stdout }}"
        dest: /tmp/vault_init_output.txt

    - name: Extract Unseal Keys and Root Token
      script: ../templates/extract_unseal_keys.sh
      args:
        executable: /bin/bash

    - name: Unseal the first Vault pod
      script: ../templates/unseal_vault_pod.sh {{ namespace }} {{ vault_pod_0 }}
      args:
        executable: /bin/bash

    - name: Join and unseal remaining Vault pods
      script: ../templates/join_and_unseal_pods.sh {{ namespace }} {{ vault_pod_0 }} {{ replica_count }} {{ leader_ca_cert }}
      args:
        executable: /bin/bash
