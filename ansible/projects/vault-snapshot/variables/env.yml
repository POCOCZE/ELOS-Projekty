---
# --- IMPORTANT ---
# All used scripts will be saved to configured home directory. 
# DON'T DELETE THEM as they're important because cronjob periodically run them.

# --- Its mandatory to change those values before Ansible Playbook execution ---
# vault_settings.vault_addr
# vault_settings.vault_token

# --- If s3 is used ---
# s3.enabled
# s3.access_key
# s3.secret_key
# s3.host
# s3.bucket_name

# Other values can be left as default.
# --- END IMPORTANT ---


# --- User Configuration Settings ---
# `vault_snapshot_username`: Name of the new user to be created
# `is_system_account`:       User created by the system for running services and processes rather than for direct interactive login.
# `password_lock`:           Locked account means that only root or sudo granted users can switch to this user.
#                            If you have granted all necessary privileges to sign into this account you can you this command to switch to user `sudo su - <username>`.
#                            Default: `yes`. It's recommended to keep this as default. (Security warning) Change only if you know what you are doing.
# `create_home_dir`:         Create home directory for the new user. By default this directory will be used to save Vault Snapshots.
#                            Default: `yes`. When `no` set you must define alternative home directory location.
#                            When defining alternative location you must strictly use this structure: `home_dir_location`/`vault_snapshot_username`.
#                            It's crucial to make sure that alternative location is already created. The Playbook do not take care of it.
# `home_dir_location`:       Root filesystem location of home directory. Used when `create_home_dir` set to `no` so alternative location of home directory is needed.
#                            You must write slash at the start. However it's recommended to use the defaults with `create_home_dir` set to `yes`.
# `default_shell`:           Shell that newly created user will use. By default it's `/bin/bash`.
#                            When defined another shell you take responsibility of installing it on the system. The Playbook do not take care of it.
# `use_default_password`:    Automatically set password for new user. Password is set as `vault_snapshot_username` variable.
#                            Default: `yes`. When `no` set you must define `new_password`.
# `new_password`:            When you want to set different password for the new user. Used when `use_default_password` set to `no`.
user:
  vault_snapshot_username: vault-backup
  is_system_account: True
  password_lock: yes
  create_home_dir: yes
  home_dir_location: /home
  default_shell: /bin/bash
  use_default_password: yes
  new_password: SuperSecretPassword123


# --- Vault Configuration Settings ---
# `vault_addr`:        Vault server address with port. Text must be plaintext. When ansible execution template will base64 encode the values and stored on remote machine.
# `vault_token`:       Vault server token. Text must be plaintext. When ansible execution template will base64 encode the values and stored on remote machine.
# `vault_skip_verify`: Vault certificate validation setting. Use default for best security otherwise for best compatibility.
#                      Default: 'true', TLS certificate verification will be skipped. When 'false' for production environments to ensure secure connections.
vault_settings:
  vault_addr: https://vault.example.com:8200
  vault_token: YOUR_VAULT_TOKEN_HERE
  vault_skip_verify: false


# --- Secrets File Configuration ---
# `hidden_dir_name`: Hidden directory to save base64 encoded Vault configuration. By default will be used `~/.secret` otherwise `~/<hidden_dir_name>`
# `json_file_name`:  Name of file to create that will store Vault connection credintials in json format.
# INFO:              When defaults untouched secrets file location is `~/.secret/vault-backup.json`
secrets_file:
  hidden_dir_name: .secret
  json_file_name: vault-backup


# --- Snapshots Configuration Settings ---
# `dir_name`:          Directory name to create that will contain all Vault Snapshot files.
#                      Default: `snapshots`, but you can choose any name you want.
# `file_prefix_name`:  File prefix that will be used as a prefix structure for snapshots.
#                      Default: `vault-snapshot` means that that created snapshot files will look like `vault-snapshot-2025-02-18-12-00.snap`
# `num_max_snapshots`: Max snapshots count to keep. When script will exceed this value, the oldest file will be automatically deleted.
#                      Default: `10`, but you can choose anything you want. Keep in mind that you have enough storage size.
# `script_name`:       Name of script that will find Raft leader, create snapshots and keep only the defined number of snapshot files.
#                      Default: `vault-snapshot`. It's recommended to keep the default.
# `cron`:              This array specifies exact time to run the cronjob.
#                      Default: minute: `0` - run `vault-snapshot` script every hour at XX:00. Uses 24h time format.
#                      If you dont know what you are doing don't change these values. Highly encourage to read cron docs first to set values properly.
snapshots:
  dir_name: snapshots
  file_prefix_name: vault-snapshot
  num_max_snapshots: 10
  script_name: vault-snapshot
  cron:
    minute: 0
    hour: *
    day: *
    month: *
    weekday: *


# --- External S3 Object Storage Configuration ---
# Playbook automatically test the connection for you. If problems occur we will let you know through CLI.
# `enabled`:                   Optionally turn on backups to external s3 object storage.
#                              Default: `false`. If `true` set it's important to set other values too to make it work!
# `access_key`:                Your s3 storage access key. Important!
# `secret_key`:                Your s3 storage secret key. Important!
# `host`:                      Address of the external s3 storage. Include port. Important!
# `bucket_name`:               Name of bucket on s3 storage where snapshots will be saved. The bucket will be created for you if it's not already present.
#                              Default: `vault-snapshots`. You can overwrite this settings but its important to know what you are doing.
# `backup_script_name`:        Name of script that will be used to run the backups to s3 storage. Script will be ran automatically by cron.
#                              Default: `s3cmd-backup`. You don't have to change the script name though.
# `deletion_on_local_removal`: Enables ability to delete files on S3 if they are removed locally. Potentially desctructive.
#                              Default: `false`. If `true` set the snapshots directory is in sync with s3 storage.
#                              It will automatically remove all the old backuped snapshots from s3 when deleted in the local snaphots folder.
# `cron`:                      This array specifies exact time to run the cronjob.
#                              Default: minute: `0`; hour: `12` - run `s3cmd-backup` script every day at 12:00. Uses 24h time format.
#                              If you dont know what you are doing don't change these values. Highly encourage to read cron docs first to set values properly.
s3:
  enabled: false
  access_key: XXXX
  secret_key: YYYY
  host: secret.address.dot:9000
  bucket_name: vault-snapshots
  backup_script_name: s3cmd-backup
  deletion_on_local_removal:
    enabled: false
  cron:
    minute: 0
    hour: 12
    day: *
    month: *
    weekday: *
